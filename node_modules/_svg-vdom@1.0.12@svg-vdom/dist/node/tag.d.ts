import { IParentNodeOption, ITagNode } from '../../typings/node';
import { ParentNode } from './parent';
export declare class TagNode extends ParentNode implements ITagNode {
    constructor(option: IParentNodeOption);
    nodeType: ITagNode['nodeType'];
    attributes: ITagNode['attributes'];
    /**
     * 复制自身，但是不复制节点树关系链
     */
    cloneNode(): TagNode;
    /**
     * 是否存在属性
     * @param _name 属性名
     * @param _namespace 属性命名空间
     */
    hasAttribute(_name: string, _namespace?: string): boolean;
    /**
     * 获取属性
     * @param _name 属性名
     * @param _namespace 属性命名空间
     */
    getAttribute(_name: string, _namespace?: string): string | null;
    /**
     * 设置属性
     * @param name 属性名
     * @param value 属性值
     * @param namespace 属性命名空间
     */
    setAttribute(name: string, value: string, namespace?: string): void;
    /**
     * 移除属性
     * @param _name 属性名
     * @param _namespace 属性命名空间
     */
    removeAttribute(_name: string, _namespace?: string): boolean;
}
